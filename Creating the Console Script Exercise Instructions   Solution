Now that you’ve implemented all of the functionality that the hr tools needs, it’s time to wire the pieces together and modify the package metadata to create a console script when installed.

Implement main function that ties all of the modules together based on input to the CLI parser.
Modify the setup.py so that when installed there is an hr console script.

Here’s an example main function that was added to the cli module:

src/hr/cli.py

import argparse

def create_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('path', help='the path to the inventory file (JSON)')
    parser.add_argument('--export', action='store_true', help='export current settings to inventory file')
    return parser

def main():
    from hr import inventory, users

    args = create_parser().parse_args()

    if args.export:
        inventory.dump(args.path)
    else:
        users_info = inventory.load(args.path)
        users.sync(users_info)
Here are the modifications for the setup.py file necessary to create a console script:

setup.py

from setuptools import setup, find_packages

with open('README.rst', 'r') as f:
    readme = f.read()

setup(
    name='hr',
    version='0.1.0',
    description='Commandline user management utility',
    long_description=readme,
    author='Keith Thompson',
    author_email='keith@linuxacademy.com',
    packages=find_packages('src'),
    package_dir={'': 'src'},
    install_requires=[],
    entry_points={
        'console_scripts': 'hr=hr.cli:main',
    },
)
To test this, you’ll need to reinstall the hr module.
